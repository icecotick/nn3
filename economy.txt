import discord
from discord.ext import commands
from discord.ext.commands import CommandOnCooldown
import random
from utils.database import get_balance, update_balance, get_custom_role, create_custom_role
from config import ROLE_NAME, CUSTOM_ROLE_PRICE, CRIT_CHANCE, SUCCESS_CHANCE, ADMIN_ROLES

def is_admin(member):
    return any(role.name.lower() in [r.lower() for r in ADMIN_ROLES] for role in member.roles)

class Economy(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name="—Å–ª–∞–≤–∞–Ω–Ω")
    @commands.cooldown(1, 7200, commands.BucketType.user)
    async def slav_party(self, ctx):
        user = ctx.author
        role = discord.utils.get(ctx.guild.roles, name=ROLE_NAME)

        if not role:
            await ctx.send('‚ùå –†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
            return

        if role in user.roles:
            await ctx.send(f'üü• {user.mention}, —Ç—ã —É–∂–µ –ü–∞—Ç—Ä–∏–æ—Ç!')
            return

        roll = random.randint(1, 100)
        balance = await get_balance(user.id, self.bot.db)

        if roll <= CRIT_CHANCE:
            await user.add_roles(role)
            await update_balance(user.id, 1000, self.bot.db)
            await ctx.send(f'üí• **–ö–†–ò–¢!** {user.mention}, —Ç—ã –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å + 1000 —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Ä–µ–π—Ç–∏–Ω–≥–∞! (–ë–∞–ª–∞–Ω—Å: {await get_balance(user.id, self.bot.db)})')

        elif roll <= SUCCESS_CHANCE:
            await user.add_roles(role)
            await update_balance(user.id, 100, self.bot.db)
            await ctx.send(f'üü• {user.mention}, —Ç—ã –ø–æ–ª—É—á–∏–ª —Ä–æ–ª—å + 100 —Ä–µ–π—Ç–∏–Ω–≥–∞! (–ë–∞–ª–∞–Ω—Å: {await get_balance(user.id, self.bot.db)})')

        else:
            penalty = min(10, balance)
            await update_balance(user.id, -penalty, self.bot.db)
            await ctx.send(f'üïä {user.mention}, -{penalty} —Ä–µ–π—Ç–∏–Ω–≥–∞. –ü–æ–ø—Ä–æ–±—É–π –µ—â—ë! (–ë–∞–ª–∞–Ω—Å: {await get_balance(user.id, self.bot.db)})')

    @commands.command(name="—Ñ–∞—Ä–º")
    @commands.cooldown(1, 1200, commands.BucketType.user)
    async def farm(self, ctx):
        user = ctx.author
        role = discord.utils.get(ctx.guild.roles, name=ROLE_NAME)

        if not role or role not in user.roles:
            await ctx.send("‚õî –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ü–∞—Ç—Ä–∏–æ—Ç–æ–≤.")
            return

        reward = random.randint(5, 15)
        await update_balance(user.id, reward, self.bot.db)
        await ctx.send(f"üåæ {user.mention}, –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {reward} —Å–æ—Ü. –∫—Ä–µ–¥–∏—Ç–æ–≤! (–ë–∞–ª–∞–Ω—Å: {await get_balance(user.id, self.bot.db)})")

    @commands.command(name="–±–∞–ª–∞–Ω—Å")
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def balance(self, ctx):
        bal = await get_balance(ctx.author.id, self.bot.db)
        await ctx.send(f'üí∞ {ctx.author.mention}, –≤–∞—à –±–∞–ª–∞–Ω—Å: {bal}')

    @commands.command(name="–ø–µ—Ä–µ–≤–µ—Å—Ç–∏")
    async def transfer(self, ctx, member: discord.Member, amount: int):
        if amount <= 0:
            await ctx.send("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
            return
        if member == ctx.author:
            await ctx.send("‚ùå –ù–µ–ª—å–∑—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å —Å–∞–º–æ–º—É —Å–µ–±–µ!")
            return

        sender_balance = await get_balance(ctx.author.id, self.bot.db)
        if sender_balance < amount:
            await ctx.send("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            return

        await update_balance(ctx.author.id, -amount, self.bot.db)
        await update_balance(member.id, amount, self.bot.db)
        await ctx.send(f'‚úÖ {ctx.author.mention} –ø–µ—Ä–µ–≤–µ–ª {amount} —Ä–µ–π—Ç–∏–Ω–≥–∞ {member.mention}!')

    @commands.command(name="—Ç–æ–ø")
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def top(self, ctx):
        async with self.bot.db.acquire() as conn:
            top_users = await conn.fetch("SELECT user_id, balance FROM users ORDER BY balance DESC LIMIT 10")

        if not top_users:
            await ctx.send("üòî –¢–∞–±–ª–∏—Ü–∞ –ø—É—Å—Ç–∞.")
            return

        leaderboard = []
        for i, record in enumerate(top_users, start=1):
            try:
                user = await self.bot.fetch_user(record['user_id'])
                leaderboard.append(f"{i}. {user.name} ‚Äî {record['balance']} –∫—Ä–µ–¥–∏—Ç–æ–≤")
            except:
                leaderboard.append(f"{i}. [–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] ‚Äî {record['balance']} –∫—Ä–µ–¥–∏—Ç–æ–≤")

        await ctx.send("üèÜ **–¢–æ–ø 10 –ü–∞—Ç—Ä–∏–æ—Ç–æ–≤:**\n" + "\n".join(leaderboard))

    @commands.command(name="–¥–æ–ø–∫—Ä–µ–¥–∏—Ç")
    async def add_credits(self, ctx, member: discord.Member, amount: int):
        if not is_admin(ctx.author):
            await ctx.send("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!")
            return
        
        if amount <= 0:
            await ctx.send("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
            return
        
        await update_balance(member.id, amount, self.bot.db)
        new_balance = await get_balance(member.id, self.bot.db)
        await ctx.send(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {ctx.author.mention} –¥–æ–±–∞–≤–∏–ª {amount} –∫—Ä–µ–¥–∏—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {member.mention}\nüí∞ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance} –∫—Ä–µ–¥–∏—Ç–æ–≤")

    @commands.command(name="–º–∏–Ω—É—Å–∫—Ä–µ–¥–∏—Ç")
    async def remove_credits(self, ctx, member: discord.Member, amount: int):
        if not is_admin(ctx.author):
            await ctx.send("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤!")
            return
        
        if amount <= 0:
            await ctx.send("‚ùå –°—É–º–º–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–π!")
            return
        
        current_balance = await get_balance(member.id, self.bot.db)
        if current_balance < amount:
            await ctx.send(f"‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ {current_balance} –∫—Ä–µ–¥–∏—Ç–æ–≤, –Ω–µ–ª—å–∑—è —Å–Ω—è—Ç—å {amount}!")
            return
        
        await update_balance(member.id, -amount, self.bot.db)
        new_balance = await get_balance(member.id, self.bot.db)
        await ctx.send(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {ctx.author.mention} —Å–Ω—è–ª {amount} –∫—Ä–µ–¥–∏—Ç–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.mention}\nüí∞ –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {new_balance} –∫—Ä–µ–¥–∏—Ç–æ–≤")

    @commands.command(name="–º–∞–≥–∞–∑–∏–Ω")
    async def shop(self, ctx):
        shop_text = f"""
üõç **–ú–∞–≥–∞–∑–∏–Ω —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞:**

üé® `!–∫—É–ø–∏—Ç—å—Ä–æ–ª—å "–ù–∞–∑–≤–∞–Ω–∏–µ" #–¶–≤–µ—Ç` - –ö—É–ø–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é —Ä–æ–ª—å ({CUSTOM_ROLE_PRICE} –∫—Ä–µ–¥–∏—Ç–æ–≤)
–ü—Ä–∏–º–µ—Ä: `!–∫—É–ø–∏—Ç—å—Ä–æ–ª—å "–ë–æ–≥–∞—á" #ff0000`

üí∞ –í–∞—à –±–∞–ª–∞–Ω—Å: {await get_balance(ctx.author.id, self.bot.db)} –∫—Ä–µ–¥–∏—Ç–æ–≤
"""
        await ctx.send(shop_text)

    @commands.command(name="–∫—É–ø–∏—Ç—å—Ä–æ–ª—å")
    async def buy_role(self, ctx, role_name: str, role_color: str):
        user = ctx.author
        balance = await get_balance(user.id, self.bot.db)
        
        if balance < CUSTOM_ROLE_PRICE:
            await ctx.send(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –ù—É–∂–Ω–æ {CUSTOM_ROLE_PRICE} –∫—Ä–µ–¥–∏—Ç–æ–≤, —É –≤–∞—Å {balance}.")
            return
        
        existing_role = await get_custom_role(user.id, self.bot.db)
        if existing_role:
            try:
                old_role = ctx.guild.get_role(existing_role['role_id'])
                if old_role:
                    await old_role.delete()
            except:
                pass
        
        try:
            color = discord.Color.from_str(role_color)
            new_role = await ctx.guild.create_role(
                name=role_name,
                color=color,
                reason=f"–ö–∞—Å—Ç–æ–º–Ω–∞—è —Ä–æ–ª—å –¥–ª—è {user.name}"
            )
            
            await user.add_roles(new_role)
            await create_custom_role(user.id, new_role.id, role_name, role_color, self.bot.db)
            await update_balance(user.id, -CUSTOM_ROLE_PRICE, self.bot.db)
            
            await ctx.send(f"‚úÖ {user.mention}, –≤—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ —Ä–æ–ª—å {new_role.mention} –∑–∞ {CUSTOM_ROLE_PRICE} –∫—Ä–µ–¥–∏—Ç–æ–≤!")
        except ValueError:
            await ctx.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ü–≤–µ—Ç–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ HEX —Ñ–æ—Ä–º–∞—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä: `#ff0000`")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–æ–ª–∏: {e}")
            await ctx.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–æ–ª–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    @commands.command(name="–ø–æ–º–æ—â—å")
    async def help_command(self, ctx):
        help_text = f"""
üìú **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:**

üî¥ `!—Å–ª–∞–≤–∞–Ω–Ω` ‚Äî –ø–æ–ø—ã—Ç–∫–∞ —Å—Ç–∞—Ç—å –ü–∞—Ç—Ä–∏–æ—Ç–æ–º (2—á –∫–¥)
üåæ `!—Ñ–∞—Ä–º` ‚Äî –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∫—Ä–µ–¥–∏—Ç—ã (20–º –∫–¥, —Ç–æ–ª—å–∫–æ –¥–ª—è –ü–∞—Ç—Ä–∏–æ—Ç–æ–≤)
üí∞ `!–±–∞–ª–∞–Ω—Å` ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –±–∞–ª–∞–Ω—Å (5—Å –∫–¥)
üí∏ `!–ø–µ—Ä–µ–≤–µ—Å—Ç–∏ @—é–∑–µ—Ä —Å—É–º–º–∞` ‚Äî –ø–µ—Ä–µ–≤–æ–¥ –∫—Ä–µ–¥–∏—Ç–æ–≤
üèÜ `!—Ç–æ–ø` ‚Äî —Ç–æ–ø-10 –ø–æ –±–∞–ª–∞–Ω—Å—É (5—Å –∫–¥)
üõç `!–º–∞–≥–∞–∑–∏–Ω` ‚Äî –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
üé® `!–∫—É–ø–∏—Ç—å—Ä–æ–ª—å "–ù–∞–∑–≤–∞–Ω–∏–µ" #–¶–≤–µ—Ç` ‚Äî –∫—É–ø–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é —Ä–æ–ª—å ({CUSTOM_ROLE_PRICE} –∫—Ä–µ–¥–∏—Ç–æ–≤)
‚ûï `!–¥–æ–ø–∫—Ä–µ–¥–∏—Ç @—é–∑–µ—Ä —Å—É–º–º–∞` ‚Äî –¥–æ–±–∞–≤–∏—Ç—å –∫—Ä–µ–¥–∏—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
‚ûñ `!–º–∏–Ω—É—Å–∫—Ä–µ–¥–∏—Ç @—é–∑–µ—Ä —Å—É–º–º–∞` ‚Äî —Å–Ω—è—Ç—å –∫—Ä–µ–¥–∏—Ç—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
üë• `!—Å–æ–∑–¥–∞—Ç—å–∫–ª–∞–Ω –Ω–∞–∑–≤–∞–Ω–∏–µ` ‚Äî —Å–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω
üë• `!–≤–æ–π—Ç–∏–≤–∫–ª–∞–Ω –Ω–∞–∑–≤–∞–Ω–∏–µ` ‚Äî –≤—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω
üèÜ `!–∫–ª–∞–Ω—Ç–æ–ø` ‚Äî —Ç–æ–ø –∫–ª–∞–Ω–æ–≤
üë§ `!–ø—Ä–æ—Ñ–∏–ª—å @—é–∑–µ—Ä` ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
üìù `!–æ–ø–∏—Å–∞–Ω–∏–µ_–ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–∫—Å—Ç` ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
‚ÑπÔ∏è `!–ø–æ–º–æ—â—å` ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ

–ü—Ä–∏–º–µ—Ä—ã:
`!–∫—É–ø–∏—Ç—å—Ä–æ–ª—å "–ë–æ–≥–∞—á" #ff0000`
`!–¥–æ–ø–∫—Ä–µ–¥–∏—Ç @–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 500`
`!–ø—Ä–æ—Ñ–∏–ª—å @–£—á–∞—Å—Ç–Ω–∏–∫`
"""
        await ctx.send(help_text)

async def setup(bot):
    await bot.add_cog(Economy(bot))